#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace L2S
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="tb_SolarcLixo")]
	public partial class BdDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttb_Process(tb_Process instance);
    partial void Updatetb_Process(tb_Process instance);
    partial void Deletetb_Process(tb_Process instance);
    partial void Inserttb_ProcessPayment(tb_ProcessPayment instance);
    partial void Updatetb_ProcessPayment(tb_ProcessPayment instance);
    partial void Deletetb_ProcessPayment(tb_ProcessPayment instance);
    partial void Inserttb_ProcessG(tb_ProcessG instance);
    partial void Updatetb_ProcessG(tb_ProcessG instance);
    partial void Deletetb_ProcessG(tb_ProcessG instance);
    partial void Inserttb_ProcessGPayment(tb_ProcessGPayment instance);
    partial void Updatetb_ProcessGPayment(tb_ProcessGPayment instance);
    partial void Deletetb_ProcessGPayment(tb_ProcessGPayment instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Inserttb_Creditor(tb_Creditor instance);
    partial void Updatetb_Creditor(tb_Creditor instance);
    partial void Deletetb_Creditor(tb_Creditor instance);
    partial void Inserttb_Court(tb_Court instance);
    partial void Updatetb_Court(tb_Court instance);
    partial void Deletetb_Court(tb_Court instance);
    partial void Inserttb_Executed(tb_Executed instance);
    partial void Updatetb_Executed(tb_Executed instance);
    partial void Deletetb_Executed(tb_Executed instance);
    partial void Inserttb_Representative(tb_Representative instance);
    partial void Updatetb_Representative(tb_Representative instance);
    partial void Deletetb_Representative(tb_Representative instance);
    partial void Inserttb_ProcessDetail(tb_ProcessDetail instance);
    partial void Updatetb_ProcessDetail(tb_ProcessDetail instance);
    partial void Deletetb_ProcessDetail(tb_ProcessDetail instance);
    partial void Inserttb_ProcessExecuted(tb_ProcessExecuted instance);
    partial void Updatetb_ProcessExecuted(tb_ProcessExecuted instance);
    partial void Deletetb_ProcessExecuted(tb_ProcessExecuted instance);
    partial void Inserttb_ProcessCreditor(tb_ProcessCreditor instance);
    partial void Updatetb_ProcessCreditor(tb_ProcessCreditor instance);
    partial void Deletetb_ProcessCreditor(tb_ProcessCreditor instance);
    partial void Inserttb_Entity(tb_Entity instance);
    partial void Updatetb_Entity(tb_Entity instance);
    partial void Deletetb_Entity(tb_Entity instance);
    #endregion
		
		public BdDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["conn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BdDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BdDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BdDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BdDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tb_Process> tb_Processes
		{
			get
			{
				return this.GetTable<tb_Process>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessPayment> tb_ProcessPayments
		{
			get
			{
				return this.GetTable<tb_ProcessPayment>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessG> tb_ProcessGs
		{
			get
			{
				return this.GetTable<tb_ProcessG>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessGPayment> tb_ProcessGPayments
		{
			get
			{
				return this.GetTable<tb_ProcessGPayment>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<tb_Creditor> tb_Creditors
		{
			get
			{
				return this.GetTable<tb_Creditor>();
			}
		}
		
		public System.Data.Linq.Table<tb_Court> tb_Courts
		{
			get
			{
				return this.GetTable<tb_Court>();
			}
		}
		
		public System.Data.Linq.Table<tb_Executed> tb_Executeds
		{
			get
			{
				return this.GetTable<tb_Executed>();
			}
		}
		
		public System.Data.Linq.Table<tb_Representative> tb_Representatives
		{
			get
			{
				return this.GetTable<tb_Representative>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessDetail> tb_ProcessDetails
		{
			get
			{
				return this.GetTable<tb_ProcessDetail>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessExecuted> tb_ProcessExecuteds
		{
			get
			{
				return this.GetTable<tb_ProcessExecuted>();
			}
		}
		
		public System.Data.Linq.Table<tb_ProcessCreditor> tb_ProcessCreditors
		{
			get
			{
				return this.GetTable<tb_ProcessCreditor>();
			}
		}
		
		public System.Data.Linq.Table<tb_Entity> tb_Entities
		{
			get
			{
				return this.GetTable<tb_Entity>();
			}
		}
	}
	
	[Table(Name="dbo.tb_Process")]
	public partial class tb_Process : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessId;
		
		private string _Code;
		
		private int _Number;
		
		private string _Initials;
		
		private int _Year;
		
		private string _ProcessNumber;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<float> _ExesAE;
		
		private string _Classification;
		
		private string _Observation;
		
		private System.Nullable<int> _CourtId;
		
		private System.Nullable<int> _SectionId;
		
		private System.Nullable<int> _RepresentativeId;
		
		private string _Enforcement;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserID;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private System.Nullable<System.DateTime> _AlterDate1;
		
		private System.Nullable<System.Guid> _AlterUserId1;
		
		private System.Nullable<System.DateTime> _AlterDate2;
		
		private System.Nullable<System.Guid> _AlterUserId2;
		
		private string _Section;
		
		private string _Localization;
		
		private System.Nullable<int> _ExecutionTypeId;
		
		private string _LocalizationDetail;
		
		private string _Alt;
		
		private System.Nullable<decimal> _ValueToRecover;
		
		private System.Nullable<int> _LocalizationId;
		
		private EntitySet<tb_ProcessPayment> _tb_ProcessPayments;
		
		private EntityRef<tb_ProcessDetail> _tb_ProcessDetail;
		
		private EntitySet<tb_ProcessExecuted> _tb_ProcessExecuteds;
		
		private EntitySet<tb_ProcessCreditor> _tb_ProcessCreditors;
		
		private EntityRef<tb_Court> _tb_Court;
		
		private EntityRef<tb_Representative> _tb_Representative;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnProcessNumberChanging(string value);
    partial void OnProcessNumberChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnExesAEChanging(System.Nullable<float> value);
    partial void OnExesAEChanged();
    partial void OnClassificationChanging(string value);
    partial void OnClassificationChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnCourtIdChanging(System.Nullable<int> value);
    partial void OnCourtIdChanged();
    partial void OnSectionIdChanging(System.Nullable<int> value);
    partial void OnSectionIdChanged();
    partial void OnRepresentativeIdChanging(System.Nullable<int> value);
    partial void OnRepresentativeIdChanged();
    partial void OnEnforcementChanging(string value);
    partial void OnEnforcementChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIDChanging(System.Guid value);
    partial void OnCreateUserIDChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    partial void OnAlterDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnAlterDate1Changed();
    partial void OnAlterUserId1Changing(System.Nullable<System.Guid> value);
    partial void OnAlterUserId1Changed();
    partial void OnAlterDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnAlterDate2Changed();
    partial void OnAlterUserId2Changing(System.Nullable<System.Guid> value);
    partial void OnAlterUserId2Changed();
    partial void OnSectionChanging(string value);
    partial void OnSectionChanged();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    partial void OnExecutionTypeIdChanging(System.Nullable<int> value);
    partial void OnExecutionTypeIdChanged();
    partial void OnLocalizationDetailChanging(string value);
    partial void OnLocalizationDetailChanged();
    partial void OnAltChanging(string value);
    partial void OnAltChanged();
    partial void OnValueToRecoverChanging(System.Nullable<decimal> value);
    partial void OnValueToRecoverChanged();
    partial void OnLocalizationIdChanging(System.Nullable<int> value);
    partial void OnLocalizationIdChanged();
    #endregion
		
		public tb_Process()
		{
			this._tb_ProcessPayments = new EntitySet<tb_ProcessPayment>(new Action<tb_ProcessPayment>(this.attach_tb_ProcessPayments), new Action<tb_ProcessPayment>(this.detach_tb_ProcessPayments));
			this._tb_ProcessDetail = default(EntityRef<tb_ProcessDetail>);
			this._tb_ProcessExecuteds = new EntitySet<tb_ProcessExecuted>(new Action<tb_ProcessExecuted>(this.attach_tb_ProcessExecuteds), new Action<tb_ProcessExecuted>(this.detach_tb_ProcessExecuteds));
			this._tb_ProcessCreditors = new EntitySet<tb_ProcessCreditor>(new Action<tb_ProcessCreditor>(this.attach_tb_ProcessCreditors), new Action<tb_ProcessCreditor>(this.detach_tb_ProcessCreditors));
			this._tb_Court = default(EntityRef<tb_Court>);
			this._tb_Representative = default(EntityRef<tb_Representative>);
			OnCreated();
		}
		
		[Column(Storage="_ProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessNumber", DbType="NVarChar(50)")]
		public string ProcessNumber
		{
			get
			{
				return this._ProcessNumber;
			}
			set
			{
				if ((this._ProcessNumber != value))
				{
					this.OnProcessNumberChanging(value);
					this.SendPropertyChanging();
					this._ProcessNumber = value;
					this.SendPropertyChanged("ProcessNumber");
					this.OnProcessNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_ExesAE", DbType="Real")]
		public System.Nullable<float> ExesAE
		{
			get
			{
				return this._ExesAE;
			}
			set
			{
				if ((this._ExesAE != value))
				{
					this.OnExesAEChanging(value);
					this.SendPropertyChanging();
					this._ExesAE = value;
					this.SendPropertyChanged("ExesAE");
					this.OnExesAEChanged();
				}
			}
		}
		
		[Column(Storage="_Classification", DbType="NVarChar(50)")]
		public string Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[Column(Storage="_Observation", DbType="NVarChar(4000)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[Column(Storage="_CourtId", DbType="Int")]
		public System.Nullable<int> CourtId
		{
			get
			{
				return this._CourtId;
			}
			set
			{
				if ((this._CourtId != value))
				{
					if (this._tb_Court.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourtIdChanging(value);
					this.SendPropertyChanging();
					this._CourtId = value;
					this.SendPropertyChanged("CourtId");
					this.OnCourtIdChanged();
				}
			}
		}
		
		[Column(Storage="_SectionId", DbType="Int")]
		public System.Nullable<int> SectionId
		{
			get
			{
				return this._SectionId;
			}
			set
			{
				if ((this._SectionId != value))
				{
					this.OnSectionIdChanging(value);
					this.SendPropertyChanging();
					this._SectionId = value;
					this.SendPropertyChanged("SectionId");
					this.OnSectionIdChanged();
				}
			}
		}
		
		[Column(Storage="_RepresentativeId", DbType="Int")]
		public System.Nullable<int> RepresentativeId
		{
			get
			{
				return this._RepresentativeId;
			}
			set
			{
				if ((this._RepresentativeId != value))
				{
					if (this._tb_Representative.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepresentativeIdChanging(value);
					this.SendPropertyChanging();
					this._RepresentativeId = value;
					this.SendPropertyChanged("RepresentativeId");
					this.OnRepresentativeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Enforcement", DbType="NVarChar(50)")]
		public string Enforcement
		{
			get
			{
				return this._Enforcement;
			}
			set
			{
				if ((this._Enforcement != value))
				{
					this.OnEnforcementChanging(value);
					this.SendPropertyChanging();
					this._Enforcement = value;
					this.SendPropertyChanged("Enforcement");
					this.OnEnforcementChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserID
		{
			get
			{
				return this._CreateUserID;
			}
			set
			{
				if ((this._CreateUserID != value))
				{
					this.OnCreateUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreateUserID = value;
					this.SendPropertyChanged("CreateUserID");
					this.OnCreateUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate1
		{
			get
			{
				return this._AlterDate1;
			}
			set
			{
				if ((this._AlterDate1 != value))
				{
					this.OnAlterDate1Changing(value);
					this.SendPropertyChanging();
					this._AlterDate1 = value;
					this.SendPropertyChanged("AlterDate1");
					this.OnAlterDate1Changed();
				}
			}
		}
		
		[Column(Storage="_AlterUserId1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId1
		{
			get
			{
				return this._AlterUserId1;
			}
			set
			{
				if ((this._AlterUserId1 != value))
				{
					this.OnAlterUserId1Changing(value);
					this.SendPropertyChanging();
					this._AlterUserId1 = value;
					this.SendPropertyChanged("AlterUserId1");
					this.OnAlterUserId1Changed();
				}
			}
		}
		
		[Column(Storage="_AlterDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate2
		{
			get
			{
				return this._AlterDate2;
			}
			set
			{
				if ((this._AlterDate2 != value))
				{
					this.OnAlterDate2Changing(value);
					this.SendPropertyChanging();
					this._AlterDate2 = value;
					this.SendPropertyChanged("AlterDate2");
					this.OnAlterDate2Changed();
				}
			}
		}
		
		[Column(Storage="_AlterUserId2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId2
		{
			get
			{
				return this._AlterUserId2;
			}
			set
			{
				if ((this._AlterUserId2 != value))
				{
					this.OnAlterUserId2Changing(value);
					this.SendPropertyChanging();
					this._AlterUserId2 = value;
					this.SendPropertyChanged("AlterUserId2");
					this.OnAlterUserId2Changed();
				}
			}
		}
		
		[Column(Storage="_Section", DbType="NVarChar(50)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this.OnSectionChanging(value);
					this.SendPropertyChanging();
					this._Section = value;
					this.SendPropertyChanged("Section");
					this.OnSectionChanged();
				}
			}
		}
		
		[Column(Storage="_Localization", DbType="NVarChar(50)")]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[Column(Storage="_ExecutionTypeId", DbType="Int")]
		public System.Nullable<int> ExecutionTypeId
		{
			get
			{
				return this._ExecutionTypeId;
			}
			set
			{
				if ((this._ExecutionTypeId != value))
				{
					this.OnExecutionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutionTypeId = value;
					this.SendPropertyChanged("ExecutionTypeId");
					this.OnExecutionTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_LocalizationDetail", DbType="NVarChar(50)")]
		public string LocalizationDetail
		{
			get
			{
				return this._LocalizationDetail;
			}
			set
			{
				if ((this._LocalizationDetail != value))
				{
					this.OnLocalizationDetailChanging(value);
					this.SendPropertyChanging();
					this._LocalizationDetail = value;
					this.SendPropertyChanged("LocalizationDetail");
					this.OnLocalizationDetailChanged();
				}
			}
		}
		
		[Column(Storage="_Alt", DbType="NVarChar(10)")]
		public string Alt
		{
			get
			{
				return this._Alt;
			}
			set
			{
				if ((this._Alt != value))
				{
					this.OnAltChanging(value);
					this.SendPropertyChanging();
					this._Alt = value;
					this.SendPropertyChanged("Alt");
					this.OnAltChanged();
				}
			}
		}
		
		[Column(Storage="_ValueToRecover", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ValueToRecover
		{
			get
			{
				return this._ValueToRecover;
			}
			set
			{
				if ((this._ValueToRecover != value))
				{
					this.OnValueToRecoverChanging(value);
					this.SendPropertyChanging();
					this._ValueToRecover = value;
					this.SendPropertyChanged("ValueToRecover");
					this.OnValueToRecoverChanged();
				}
			}
		}
		
		[Column(Storage="_LocalizationId", DbType="Int")]
		public System.Nullable<int> LocalizationId
		{
			get
			{
				return this._LocalizationId;
			}
			set
			{
				if ((this._LocalizationId != value))
				{
					this.OnLocalizationIdChanging(value);
					this.SendPropertyChanging();
					this._LocalizationId = value;
					this.SendPropertyChanged("LocalizationId");
					this.OnLocalizationIdChanged();
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessPayment", Storage="_tb_ProcessPayments", ThisKey="ProcessId", OtherKey="ProcessId")]
		public EntitySet<tb_ProcessPayment> tb_ProcessPayments
		{
			get
			{
				return this._tb_ProcessPayments;
			}
			set
			{
				this._tb_ProcessPayments.Assign(value);
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessDetail", Storage="_tb_ProcessDetail", ThisKey="ProcessId", OtherKey="ProcessId", IsUnique=true, IsForeignKey=false)]
		public tb_ProcessDetail tb_ProcessDetail
		{
			get
			{
				return this._tb_ProcessDetail.Entity;
			}
			set
			{
				tb_ProcessDetail previousValue = this._tb_ProcessDetail.Entity;
				if (((previousValue != value) 
							|| (this._tb_ProcessDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_ProcessDetail.Entity = null;
						previousValue.tb_Process = null;
					}
					this._tb_ProcessDetail.Entity = value;
					if ((value != null))
					{
						value.tb_Process = this;
					}
					this.SendPropertyChanged("tb_ProcessDetail");
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessExecuted", Storage="_tb_ProcessExecuteds", ThisKey="ProcessId", OtherKey="ProcessId")]
		public EntitySet<tb_ProcessExecuted> tb_ProcessExecuteds
		{
			get
			{
				return this._tb_ProcessExecuteds;
			}
			set
			{
				this._tb_ProcessExecuteds.Assign(value);
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessCreditor", Storage="_tb_ProcessCreditors", ThisKey="ProcessId", OtherKey="ProcessId")]
		public EntitySet<tb_ProcessCreditor> tb_ProcessCreditors
		{
			get
			{
				return this._tb_ProcessCreditors;
			}
			set
			{
				this._tb_ProcessCreditors.Assign(value);
			}
		}
		
		[Association(Name="tb_Court_tb_Process", Storage="_tb_Court", ThisKey="CourtId", OtherKey="CourtId", IsForeignKey=true)]
		public tb_Court tb_Court
		{
			get
			{
				return this._tb_Court.Entity;
			}
			set
			{
				tb_Court previousValue = this._tb_Court.Entity;
				if (((previousValue != value) 
							|| (this._tb_Court.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Court.Entity = null;
						previousValue.tb_Processes.Remove(this);
					}
					this._tb_Court.Entity = value;
					if ((value != null))
					{
						value.tb_Processes.Add(this);
						this._CourtId = value.CourtId;
					}
					else
					{
						this._CourtId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tb_Court");
				}
			}
		}
		
		[Association(Name="tb_Representative_tb_Process", Storage="_tb_Representative", ThisKey="RepresentativeId", OtherKey="RepresentativeId", IsForeignKey=true)]
		public tb_Representative tb_Representative
		{
			get
			{
				return this._tb_Representative.Entity;
			}
			set
			{
				tb_Representative previousValue = this._tb_Representative.Entity;
				if (((previousValue != value) 
							|| (this._tb_Representative.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Representative.Entity = null;
						previousValue.tb_Processes.Remove(this);
					}
					this._tb_Representative.Entity = value;
					if ((value != null))
					{
						value.tb_Processes.Add(this);
						this._RepresentativeId = value.RepresentativeId;
					}
					else
					{
						this._RepresentativeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tb_Representative");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = this;
		}
		
		private void detach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = null;
		}
		
		private void attach_tb_ProcessExecuteds(tb_ProcessExecuted entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = this;
		}
		
		private void detach_tb_ProcessExecuteds(tb_ProcessExecuted entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = null;
		}
		
		private void attach_tb_ProcessCreditors(tb_ProcessCreditor entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = this;
		}
		
		private void detach_tb_ProcessCreditors(tb_ProcessCreditor entity)
		{
			this.SendPropertyChanging();
			entity.tb_Process = null;
		}
	}
	
	[Table(Name="dbo.tb_ProcessPayment")]
	public partial class tb_ProcessPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentYear;
		
		private int _PaymentId;
		
		private int _ProcessId;
		
		private System.Nullable<int> _ExecutedId;
		
		private decimal _OutCome;
		
		private decimal _InCome;
		
		private float _Vat;
		
		private float _RetentionValue;
		
		private System.Nullable<int> _PaymentTypeId;
		
		private System.Nullable<int> _RepresentativeId;
		
		private System.Nullable<int> _EmployerId;
		
		private int _Status;
		
		private string _InvoiceNumber;
		
		private string _Observation;
		
		private System.DateTime _PaymentDate;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserId;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private EntityRef<tb_Process> _tb_Process;
		
		private EntityRef<tb_Executed> _tb_Executed;
		
		private EntityRef<tb_Representative> _tb_Representative;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentYearChanging(int value);
    partial void OnPaymentYearChanged();
    partial void OnPaymentIdChanging(int value);
    partial void OnPaymentIdChanged();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnExecutedIdChanging(System.Nullable<int> value);
    partial void OnExecutedIdChanged();
    partial void OnOutComeChanging(decimal value);
    partial void OnOutComeChanged();
    partial void OnInComeChanging(decimal value);
    partial void OnInComeChanged();
    partial void OnVatChanging(float value);
    partial void OnVatChanged();
    partial void OnRetentionValueChanging(float value);
    partial void OnRetentionValueChanged();
    partial void OnPaymentTypeIdChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIdChanged();
    partial void OnRepresentativeIdChanging(System.Nullable<int> value);
    partial void OnRepresentativeIdChanged();
    partial void OnEmployerIdChanging(System.Nullable<int> value);
    partial void OnEmployerIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Guid value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    #endregion
		
		public tb_ProcessPayment()
		{
			this._tb_Process = default(EntityRef<tb_Process>);
			this._tb_Executed = default(EntityRef<tb_Executed>);
			this._tb_Representative = default(EntityRef<tb_Representative>);
			OnCreated();
		}
		
		[Column(Storage="_PaymentYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentYear
		{
			get
			{
				return this._PaymentYear;
			}
			set
			{
				if ((this._PaymentYear != value))
				{
					this.OnPaymentYearChanging(value);
					this.SendPropertyChanging();
					this._PaymentYear = value;
					this.SendPropertyChanged("PaymentYear");
					this.OnPaymentYearChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessId", DbType="Int NOT NULL")]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					if (this._tb_Process.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Column(Storage="_ExecutedId", DbType="Int")]
		public System.Nullable<int> ExecutedId
		{
			get
			{
				return this._ExecutedId;
			}
			set
			{
				if ((this._ExecutedId != value))
				{
					if (this._tb_Executed.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExecutedIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutedId = value;
					this.SendPropertyChanged("ExecutedId");
					this.OnExecutedIdChanged();
				}
			}
		}
		
		[Column(Storage="_OutCome", DbType="Decimal(10,2) NOT NULL")]
		public decimal OutCome
		{
			get
			{
				return this._OutCome;
			}
			set
			{
				if ((this._OutCome != value))
				{
					this.OnOutComeChanging(value);
					this.SendPropertyChanging();
					this._OutCome = value;
					this.SendPropertyChanged("OutCome");
					this.OnOutComeChanged();
				}
			}
		}
		
		[Column(Storage="_InCome", DbType="Decimal(10,2) NOT NULL")]
		public decimal InCome
		{
			get
			{
				return this._InCome;
			}
			set
			{
				if ((this._InCome != value))
				{
					this.OnInComeChanging(value);
					this.SendPropertyChanging();
					this._InCome = value;
					this.SendPropertyChanged("InCome");
					this.OnInComeChanged();
				}
			}
		}
		
		[Column(Storage="_Vat", DbType="Real NOT NULL")]
		public float Vat
		{
			get
			{
				return this._Vat;
			}
			set
			{
				if ((this._Vat != value))
				{
					this.OnVatChanging(value);
					this.SendPropertyChanging();
					this._Vat = value;
					this.SendPropertyChanged("Vat");
					this.OnVatChanged();
				}
			}
		}
		
		[Column(Storage="_RetentionValue", DbType="Real NOT NULL")]
		public float RetentionValue
		{
			get
			{
				return this._RetentionValue;
			}
			set
			{
				if ((this._RetentionValue != value))
				{
					this.OnRetentionValueChanging(value);
					this.SendPropertyChanging();
					this._RetentionValue = value;
					this.SendPropertyChanged("RetentionValue");
					this.OnRetentionValueChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTypeId", DbType="Int")]
		public System.Nullable<int> PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_RepresentativeId", DbType="Int")]
		public System.Nullable<int> RepresentativeId
		{
			get
			{
				return this._RepresentativeId;
			}
			set
			{
				if ((this._RepresentativeId != value))
				{
					if (this._tb_Representative.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepresentativeIdChanging(value);
					this.SendPropertyChanging();
					this._RepresentativeId = value;
					this.SendPropertyChanged("RepresentativeId");
					this.OnRepresentativeIdChanged();
				}
			}
		}
		
		[Column(Storage="_EmployerId", DbType="Int")]
		public System.Nullable<int> EmployerId
		{
			get
			{
				return this._EmployerId;
			}
			set
			{
				if ((this._EmployerId != value))
				{
					this.OnEmployerIdChanging(value);
					this.SendPropertyChanging();
					this._EmployerId = value;
					this.SendPropertyChanged("EmployerId");
					this.OnEmployerIdChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNumber", DbType="NVarChar(200)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Observation", DbType="NVarChar(4000)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessPayment", Storage="_tb_Process", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
		public tb_Process tb_Process
		{
			get
			{
				return this._tb_Process.Entity;
			}
			set
			{
				tb_Process previousValue = this._tb_Process.Entity;
				if (((previousValue != value) 
							|| (this._tb_Process.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Process.Entity = null;
						previousValue.tb_ProcessPayments.Remove(this);
					}
					this._tb_Process.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessPayments.Add(this);
						this._ProcessId = value.ProcessId;
					}
					else
					{
						this._ProcessId = default(int);
					}
					this.SendPropertyChanged("tb_Process");
				}
			}
		}
		
		[Association(Name="tb_Executed_tb_ProcessPayment", Storage="_tb_Executed", ThisKey="ExecutedId", OtherKey="ExecutedId", IsForeignKey=true)]
		public tb_Executed tb_Executed
		{
			get
			{
				return this._tb_Executed.Entity;
			}
			set
			{
				tb_Executed previousValue = this._tb_Executed.Entity;
				if (((previousValue != value) 
							|| (this._tb_Executed.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Executed.Entity = null;
						previousValue.tb_ProcessPayments.Remove(this);
					}
					this._tb_Executed.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessPayments.Add(this);
						this._ExecutedId = value.ExecutedId;
					}
					else
					{
						this._ExecutedId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tb_Executed");
				}
			}
		}
		
		[Association(Name="tb_Representative_tb_ProcessPayment", Storage="_tb_Representative", ThisKey="RepresentativeId", OtherKey="RepresentativeId", IsForeignKey=true)]
		public tb_Representative tb_Representative
		{
			get
			{
				return this._tb_Representative.Entity;
			}
			set
			{
				tb_Representative previousValue = this._tb_Representative.Entity;
				if (((previousValue != value) 
							|| (this._tb_Representative.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Representative.Entity = null;
						previousValue.tb_ProcessPayments.Remove(this);
					}
					this._tb_Representative.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessPayments.Add(this);
						this._RepresentativeId = value.RepresentativeId;
					}
					else
					{
						this._RepresentativeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tb_Representative");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_ProcessG")]
	public partial class tb_ProcessG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessId;
		
		private string _Code;
		
		private int _Number;
		
		private string _Initials;
		
		private int _Year;
		
		private System.Nullable<decimal> _Value;
		
		private string _Problem;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserID;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private System.Nullable<System.DateTime> _AlterDate1;
		
		private System.Nullable<System.Guid> _AlterUserId1;
		
		private System.Nullable<System.DateTime> _AlterDate2;
		
		private System.Nullable<System.Guid> _AlterUserId2;
		
		private string _Localization;
		
		private string _LocalizationDetail;
		
		private string _Observation;
		
		private EntitySet<tb_ProcessGPayment> _tb_ProcessGPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnProblemChanging(string value);
    partial void OnProblemChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIDChanging(System.Guid value);
    partial void OnCreateUserIDChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    partial void OnAlterDate1Changing(System.Nullable<System.DateTime> value);
    partial void OnAlterDate1Changed();
    partial void OnAlterUserId1Changing(System.Nullable<System.Guid> value);
    partial void OnAlterUserId1Changed();
    partial void OnAlterDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnAlterDate2Changed();
    partial void OnAlterUserId2Changing(System.Nullable<System.Guid> value);
    partial void OnAlterUserId2Changed();
    partial void OnLocalizationChanging(string value);
    partial void OnLocalizationChanged();
    partial void OnLocalizationDetailChanging(string value);
    partial void OnLocalizationDetailChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    #endregion
		
		public tb_ProcessG()
		{
			this._tb_ProcessGPayments = new EntitySet<tb_ProcessGPayment>(new Action<tb_ProcessGPayment>(this.attach_tb_ProcessGPayments), new Action<tb_ProcessGPayment>(this.detach_tb_ProcessGPayments));
			OnCreated();
		}
		
		[Column(Storage="_ProcessId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Initials", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_Problem", DbType="VarChar(8000)")]
		public string Problem
		{
			get
			{
				return this._Problem;
			}
			set
			{
				if ((this._Problem != value))
				{
					this.OnProblemChanging(value);
					this.SendPropertyChanging();
					this._Problem = value;
					this.SendPropertyChanged("Problem");
					this.OnProblemChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserID
		{
			get
			{
				return this._CreateUserID;
			}
			set
			{
				if ((this._CreateUserID != value))
				{
					this.OnCreateUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreateUserID = value;
					this.SendPropertyChanged("CreateUserID");
					this.OnCreateUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate1", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate1
		{
			get
			{
				return this._AlterDate1;
			}
			set
			{
				if ((this._AlterDate1 != value))
				{
					this.OnAlterDate1Changing(value);
					this.SendPropertyChanging();
					this._AlterDate1 = value;
					this.SendPropertyChanged("AlterDate1");
					this.OnAlterDate1Changed();
				}
			}
		}
		
		[Column(Storage="_AlterUserId1", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId1
		{
			get
			{
				return this._AlterUserId1;
			}
			set
			{
				if ((this._AlterUserId1 != value))
				{
					this.OnAlterUserId1Changing(value);
					this.SendPropertyChanging();
					this._AlterUserId1 = value;
					this.SendPropertyChanged("AlterUserId1");
					this.OnAlterUserId1Changed();
				}
			}
		}
		
		[Column(Storage="_AlterDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate2
		{
			get
			{
				return this._AlterDate2;
			}
			set
			{
				if ((this._AlterDate2 != value))
				{
					this.OnAlterDate2Changing(value);
					this.SendPropertyChanging();
					this._AlterDate2 = value;
					this.SendPropertyChanged("AlterDate2");
					this.OnAlterDate2Changed();
				}
			}
		}
		
		[Column(Storage="_AlterUserId2", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId2
		{
			get
			{
				return this._AlterUserId2;
			}
			set
			{
				if ((this._AlterUserId2 != value))
				{
					this.OnAlterUserId2Changing(value);
					this.SendPropertyChanging();
					this._AlterUserId2 = value;
					this.SendPropertyChanged("AlterUserId2");
					this.OnAlterUserId2Changed();
				}
			}
		}
		
		[Column(Storage="_Localization", DbType="NVarChar(50)")]
		public string Localization
		{
			get
			{
				return this._Localization;
			}
			set
			{
				if ((this._Localization != value))
				{
					this.OnLocalizationChanging(value);
					this.SendPropertyChanging();
					this._Localization = value;
					this.SendPropertyChanged("Localization");
					this.OnLocalizationChanged();
				}
			}
		}
		
		[Column(Storage="_LocalizationDetail", DbType="NVarChar(50)")]
		public string LocalizationDetail
		{
			get
			{
				return this._LocalizationDetail;
			}
			set
			{
				if ((this._LocalizationDetail != value))
				{
					this.OnLocalizationDetailChanging(value);
					this.SendPropertyChanging();
					this._LocalizationDetail = value;
					this.SendPropertyChanged("LocalizationDetail");
					this.OnLocalizationDetailChanged();
				}
			}
		}
		
		[Column(Storage="_Observation", DbType="VarChar(8000)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[Association(Name="tb_ProcessG_tb_ProcessGPayment", Storage="_tb_ProcessGPayments", ThisKey="ProcessId", OtherKey="ProcessId")]
		public EntitySet<tb_ProcessGPayment> tb_ProcessGPayments
		{
			get
			{
				return this._tb_ProcessGPayments;
			}
			set
			{
				this._tb_ProcessGPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_ProcessGPayments(tb_ProcessGPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_ProcessG = this;
		}
		
		private void detach_tb_ProcessGPayments(tb_ProcessGPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_ProcessG = null;
		}
	}
	
	[Table(Name="dbo.tb_ProcessGPayment")]
	public partial class tb_ProcessGPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentYear;
		
		private int _PaymentId;
		
		private int _ProcessId;
		
		private System.Nullable<int> _ClientId;
		
		private decimal _OutCome;
		
		private decimal _InCome;
		
		private float _Vat;
		
		private float _RetentionValue;
		
		private System.Nullable<int> _PaymentTypeId;
		
		private int _Status;
		
		private string _InvoiceNumber;
		
		private string _Observation;
		
		private System.DateTime _PaymentDate;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserId;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private EntityRef<tb_ProcessG> _tb_ProcessG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentYearChanging(int value);
    partial void OnPaymentYearChanged();
    partial void OnPaymentIdChanging(int value);
    partial void OnPaymentIdChanged();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnClientIdChanging(System.Nullable<int> value);
    partial void OnClientIdChanged();
    partial void OnOutComeChanging(decimal value);
    partial void OnOutComeChanged();
    partial void OnInComeChanging(decimal value);
    partial void OnInComeChanged();
    partial void OnVatChanging(float value);
    partial void OnVatChanged();
    partial void OnRetentionValueChanging(float value);
    partial void OnRetentionValueChanged();
    partial void OnPaymentTypeIdChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Guid value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    #endregion
		
		public tb_ProcessGPayment()
		{
			this._tb_ProcessG = default(EntityRef<tb_ProcessG>);
			OnCreated();
		}
		
		[Column(Storage="_PaymentYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentYear
		{
			get
			{
				return this._PaymentYear;
			}
			set
			{
				if ((this._PaymentYear != value))
				{
					this.OnPaymentYearChanging(value);
					this.SendPropertyChanging();
					this._PaymentYear = value;
					this.SendPropertyChanged("PaymentYear");
					this.OnPaymentYearChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessId", DbType="Int NOT NULL")]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					if (this._tb_ProcessG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Column(Storage="_ClientId", DbType="Int")]
		public System.Nullable<int> ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[Column(Storage="_OutCome", DbType="Decimal(10,2) NOT NULL")]
		public decimal OutCome
		{
			get
			{
				return this._OutCome;
			}
			set
			{
				if ((this._OutCome != value))
				{
					this.OnOutComeChanging(value);
					this.SendPropertyChanging();
					this._OutCome = value;
					this.SendPropertyChanged("OutCome");
					this.OnOutComeChanged();
				}
			}
		}
		
		[Column(Storage="_InCome", DbType="Decimal(10,2) NOT NULL")]
		public decimal InCome
		{
			get
			{
				return this._InCome;
			}
			set
			{
				if ((this._InCome != value))
				{
					this.OnInComeChanging(value);
					this.SendPropertyChanging();
					this._InCome = value;
					this.SendPropertyChanged("InCome");
					this.OnInComeChanged();
				}
			}
		}
		
		[Column(Storage="_Vat", DbType="Real NOT NULL")]
		public float Vat
		{
			get
			{
				return this._Vat;
			}
			set
			{
				if ((this._Vat != value))
				{
					this.OnVatChanging(value);
					this.SendPropertyChanging();
					this._Vat = value;
					this.SendPropertyChanged("Vat");
					this.OnVatChanged();
				}
			}
		}
		
		[Column(Storage="_RetentionValue", DbType="Real NOT NULL")]
		public float RetentionValue
		{
			get
			{
				return this._RetentionValue;
			}
			set
			{
				if ((this._RetentionValue != value))
				{
					this.OnRetentionValueChanging(value);
					this.SendPropertyChanging();
					this._RetentionValue = value;
					this.SendPropertyChanged("RetentionValue");
					this.OnRetentionValueChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentTypeId", DbType="Int")]
		public System.Nullable<int> PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_InvoiceNumber", DbType="NVarChar(200)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[Column(Storage="_Observation", DbType="NVarChar(4000)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Association(Name="tb_ProcessG_tb_ProcessGPayment", Storage="_tb_ProcessG", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
		public tb_ProcessG tb_ProcessG
		{
			get
			{
				return this._tb_ProcessG.Entity;
			}
			set
			{
				tb_ProcessG previousValue = this._tb_ProcessG.Entity;
				if (((previousValue != value) 
							|| (this._tb_ProcessG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_ProcessG.Entity = null;
						previousValue.tb_ProcessGPayments.Remove(this);
					}
					this._tb_ProcessG.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessGPayments.Add(this);
						this._ProcessId = value.ProcessId;
					}
					else
					{
						this._ProcessId = default(int);
					}
					this.SendPropertyChanged("tb_ProcessG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[Column(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[Column(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			OnCreated();
		}
		
		[Column(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_Creditor")]
	public partial class tb_Creditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditorId;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _IdentityCard;
		
		private string _NifNipl;
		
		private string _Nifs;
		
		private System.Nullable<System.DateTime> _BornDate;
		
		private int _Active;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.Guid> _CreateUserId;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private System.Nullable<System.Guid> _AlterUserId;
		
		private string _MPhone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditorIdChanging(int value);
    partial void OnCreditorIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnNifNiplChanging(string value);
    partial void OnNifNiplChanged();
    partial void OnNifsChanging(string value);
    partial void OnNifsChanged();
    partial void OnBornDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBornDateChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnAlterUserIdChanged();
    partial void OnMPhoneChanging(string value);
    partial void OnMPhoneChanged();
    #endregion
		
		public tb_Creditor()
		{
			OnCreated();
		}
		
		[Column(Storage="_CreditorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditorId
		{
			get
			{
				return this._CreditorId;
			}
			set
			{
				if ((this._CreditorId != value))
				{
					this.OnCreditorIdChanging(value);
					this.SendPropertyChanging();
					this._CreditorId = value;
					this.SendPropertyChanged("CreditorId");
					this.OnCreditorIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_IdentityCard", DbType="NVarChar(20)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[Column(Storage="_NifNipl", DbType="NVarChar(20)")]
		public string NifNipl
		{
			get
			{
				return this._NifNipl;
			}
			set
			{
				if ((this._NifNipl != value))
				{
					this.OnNifNiplChanging(value);
					this.SendPropertyChanging();
					this._NifNipl = value;
					this.SendPropertyChanged("NifNipl");
					this.OnNifNiplChanged();
				}
			}
		}
		
		[Column(Storage="_Nifs", DbType="NVarChar(20)")]
		public string Nifs
		{
			get
			{
				return this._Nifs;
			}
			set
			{
				if ((this._Nifs != value))
				{
					this.OnNifsChanging(value);
					this.SendPropertyChanging();
					this._Nifs = value;
					this.SendPropertyChanged("Nifs");
					this.OnNifsChanged();
				}
			}
		}
		
		[Column(Storage="_BornDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BornDate
		{
			get
			{
				return this._BornDate;
			}
			set
			{
				if ((this._BornDate != value))
				{
					this.OnBornDateChanging(value);
					this.SendPropertyChanging();
					this._BornDate = value;
					this.SendPropertyChanged("BornDate");
					this.OnBornDateChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_MPhone", DbType="NVarChar(50)")]
		public string MPhone
		{
			get
			{
				return this._MPhone;
			}
			set
			{
				if ((this._MPhone != value))
				{
					this.OnMPhoneChanging(value);
					this.SendPropertyChanging();
					this._MPhone = value;
					this.SendPropertyChanged("MPhone");
					this.OnMPhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_Court")]
	public partial class tb_Court : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourtId;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private int _Active;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserId;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private string _JudicialDistrict;
		
		private EntitySet<tb_Process> _tb_Processes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourtIdChanging(int value);
    partial void OnCourtIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Guid value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    partial void OnJudicialDistrictChanging(string value);
    partial void OnJudicialDistrictChanged();
    #endregion
		
		public tb_Court()
		{
			this._tb_Processes = new EntitySet<tb_Process>(new Action<tb_Process>(this.attach_tb_Processes), new Action<tb_Process>(this.detach_tb_Processes));
			OnCreated();
		}
		
		[Column(Storage="_CourtId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourtId
		{
			get
			{
				return this._CourtId;
			}
			set
			{
				if ((this._CourtId != value))
				{
					this.OnCourtIdChanging(value);
					this.SendPropertyChanging();
					this._CourtId = value;
					this.SendPropertyChanged("CourtId");
					this.OnCourtIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="VarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_JudicialDistrict", DbType="NVarChar(200)")]
		public string JudicialDistrict
		{
			get
			{
				return this._JudicialDistrict;
			}
			set
			{
				if ((this._JudicialDistrict != value))
				{
					this.OnJudicialDistrictChanging(value);
					this.SendPropertyChanging();
					this._JudicialDistrict = value;
					this.SendPropertyChanged("JudicialDistrict");
					this.OnJudicialDistrictChanged();
				}
			}
		}
		
		[Association(Name="tb_Court_tb_Process", Storage="_tb_Processes", ThisKey="CourtId", OtherKey="CourtId")]
		public EntitySet<tb_Process> tb_Processes
		{
			get
			{
				return this._tb_Processes;
			}
			set
			{
				this._tb_Processes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_Processes(tb_Process entity)
		{
			this.SendPropertyChanging();
			entity.tb_Court = this;
		}
		
		private void detach_tb_Processes(tb_Process entity)
		{
			this.SendPropertyChanging();
			entity.tb_Court = null;
		}
	}
	
	[Table(Name="dbo.tb_Executed")]
	public partial class tb_Executed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExecutedId;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private string _IdentityCard;
		
		private string _NifNipl;
		
		private string _Nifs;
		
		private System.Nullable<System.DateTime> _BornDate;
		
		private int _Active;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserId;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private string _MPhone;
		
		private EntitySet<tb_ProcessPayment> _tb_ProcessPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExecutedIdChanging(int value);
    partial void OnExecutedIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnNifNiplChanging(string value);
    partial void OnNifNiplChanged();
    partial void OnNifsChanging(string value);
    partial void OnNifsChanged();
    partial void OnBornDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBornDateChanged();
    partial void OnActiveChanging(int value);
    partial void OnActiveChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Guid value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    partial void OnMPhoneChanging(string value);
    partial void OnMPhoneChanged();
    #endregion
		
		public tb_Executed()
		{
			this._tb_ProcessPayments = new EntitySet<tb_ProcessPayment>(new Action<tb_ProcessPayment>(this.attach_tb_ProcessPayments), new Action<tb_ProcessPayment>(this.detach_tb_ProcessPayments));
			OnCreated();
		}
		
		[Column(Storage="_ExecutedId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExecutedId
		{
			get
			{
				return this._ExecutedId;
			}
			set
			{
				if ((this._ExecutedId != value))
				{
					this.OnExecutedIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutedId = value;
					this.SendPropertyChanged("ExecutedId");
					this.OnExecutedIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_IdentityCard", DbType="NVarChar(20)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[Column(Storage="_NifNipl", DbType="NVarChar(20)")]
		public string NifNipl
		{
			get
			{
				return this._NifNipl;
			}
			set
			{
				if ((this._NifNipl != value))
				{
					this.OnNifNiplChanging(value);
					this.SendPropertyChanging();
					this._NifNipl = value;
					this.SendPropertyChanged("NifNipl");
					this.OnNifNiplChanged();
				}
			}
		}
		
		[Column(Storage="_Nifs", DbType="NVarChar(20)")]
		public string Nifs
		{
			get
			{
				return this._Nifs;
			}
			set
			{
				if ((this._Nifs != value))
				{
					this.OnNifsChanging(value);
					this.SendPropertyChanging();
					this._Nifs = value;
					this.SendPropertyChanged("Nifs");
					this.OnNifsChanged();
				}
			}
		}
		
		[Column(Storage="_BornDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BornDate
		{
			get
			{
				return this._BornDate;
			}
			set
			{
				if ((this._BornDate != value))
				{
					this.OnBornDateChanging(value);
					this.SendPropertyChanging();
					this._BornDate = value;
					this.SendPropertyChanged("BornDate");
					this.OnBornDateChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Int NOT NULL")]
		public int Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_MPhone", DbType="NVarChar(50)")]
		public string MPhone
		{
			get
			{
				return this._MPhone;
			}
			set
			{
				if ((this._MPhone != value))
				{
					this.OnMPhoneChanging(value);
					this.SendPropertyChanging();
					this._MPhone = value;
					this.SendPropertyChanged("MPhone");
					this.OnMPhoneChanged();
				}
			}
		}
		
		[Association(Name="tb_Executed_tb_ProcessPayment", Storage="_tb_ProcessPayments", ThisKey="ExecutedId", OtherKey="ExecutedId")]
		public EntitySet<tb_ProcessPayment> tb_ProcessPayments
		{
			get
			{
				return this._tb_ProcessPayments;
			}
			set
			{
				this._tb_ProcessPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Executed = this;
		}
		
		private void detach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Executed = null;
		}
	}
	
	[Table(Name="dbo.tb_Representative")]
	public partial class tb_Representative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepresentativeId;
		
		private string _Name;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Email;
		
		private System.Nullable<System.Guid> _Userid;
		
		private System.DateTime _CreateDate;
		
		private System.Guid _CreateUserId;
		
		private System.DateTime _AlterDate;
		
		private System.Guid _AlterUserId;
		
		private string _Nif;
		
		private string _CarbonCopy;
		
		private string _MPhone;
		
		private string _LawyerNumber;
		
		private EntitySet<tb_Process> _tb_Processes;
		
		private EntitySet<tb_ProcessPayment> _tb_ProcessPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepresentativeIdChanging(int value);
    partial void OnRepresentativeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUseridChanging(System.Nullable<System.Guid> value);
    partial void OnUseridChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Guid value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.DateTime value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Guid value);
    partial void OnAlterUserIdChanged();
    partial void OnNifChanging(string value);
    partial void OnNifChanged();
    partial void OnCarbonCopyChanging(string value);
    partial void OnCarbonCopyChanged();
    partial void OnMPhoneChanging(string value);
    partial void OnMPhoneChanged();
    partial void OnLawyerNumberChanging(string value);
    partial void OnLawyerNumberChanged();
    #endregion
		
		public tb_Representative()
		{
			this._tb_Processes = new EntitySet<tb_Process>(new Action<tb_Process>(this.attach_tb_Processes), new Action<tb_Process>(this.detach_tb_Processes));
			this._tb_ProcessPayments = new EntitySet<tb_ProcessPayment>(new Action<tb_ProcessPayment>(this.attach_tb_ProcessPayments), new Action<tb_ProcessPayment>(this.detach_tb_ProcessPayments));
			OnCreated();
		}
		
		[Column(Storage="_RepresentativeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepresentativeId
		{
			get
			{
				return this._RepresentativeId;
			}
			set
			{
				if ((this._RepresentativeId != value))
				{
					this.OnRepresentativeIdChanging(value);
					this.SendPropertyChanging();
					this._RepresentativeId = value;
					this.SendPropertyChanged("RepresentativeId");
					this.OnRepresentativeIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[Column(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Userid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime NOT NULL")]
		public System.DateTime AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Nif", DbType="NVarChar(200)")]
		public string Nif
		{
			get
			{
				return this._Nif;
			}
			set
			{
				if ((this._Nif != value))
				{
					this.OnNifChanging(value);
					this.SendPropertyChanging();
					this._Nif = value;
					this.SendPropertyChanged("Nif");
					this.OnNifChanged();
				}
			}
		}
		
		[Column(Storage="_CarbonCopy", DbType="NVarChar(200)")]
		public string CarbonCopy
		{
			get
			{
				return this._CarbonCopy;
			}
			set
			{
				if ((this._CarbonCopy != value))
				{
					this.OnCarbonCopyChanging(value);
					this.SendPropertyChanging();
					this._CarbonCopy = value;
					this.SendPropertyChanged("CarbonCopy");
					this.OnCarbonCopyChanged();
				}
			}
		}
		
		[Column(Storage="_MPhone", DbType="NVarChar(50)")]
		public string MPhone
		{
			get
			{
				return this._MPhone;
			}
			set
			{
				if ((this._MPhone != value))
				{
					this.OnMPhoneChanging(value);
					this.SendPropertyChanging();
					this._MPhone = value;
					this.SendPropertyChanged("MPhone");
					this.OnMPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_LawyerNumber", DbType="NVarChar(50)")]
		public string LawyerNumber
		{
			get
			{
				return this._LawyerNumber;
			}
			set
			{
				if ((this._LawyerNumber != value))
				{
					this.OnLawyerNumberChanging(value);
					this.SendPropertyChanging();
					this._LawyerNumber = value;
					this.SendPropertyChanged("LawyerNumber");
					this.OnLawyerNumberChanged();
				}
			}
		}
		
		[Association(Name="tb_Representative_tb_Process", Storage="_tb_Processes", ThisKey="RepresentativeId", OtherKey="RepresentativeId")]
		public EntitySet<tb_Process> tb_Processes
		{
			get
			{
				return this._tb_Processes;
			}
			set
			{
				this._tb_Processes.Assign(value);
			}
		}
		
		[Association(Name="tb_Representative_tb_ProcessPayment", Storage="_tb_ProcessPayments", ThisKey="RepresentativeId", OtherKey="RepresentativeId")]
		public EntitySet<tb_ProcessPayment> tb_ProcessPayments
		{
			get
			{
				return this._tb_ProcessPayments;
			}
			set
			{
				this._tb_ProcessPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_Processes(tb_Process entity)
		{
			this.SendPropertyChanging();
			entity.tb_Representative = this;
		}
		
		private void detach_tb_Processes(tb_Process entity)
		{
			this.SendPropertyChanging();
			entity.tb_Representative = null;
		}
		
		private void attach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Representative = this;
		}
		
		private void detach_tb_ProcessPayments(tb_ProcessPayment entity)
		{
			this.SendPropertyChanging();
			entity.tb_Representative = null;
		}
	}
	
	[Table(Name="dbo.tb_ProcessDetail")]
	public partial class tb_ProcessDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessId;
		
		private System.Nullable<int> _PaymentAgreementId;
		
		private System.Nullable<int> _ProcessExtinctionId;
		
		private System.Nullable<int> _ExtinctionCodeId;
		
		private System.Nullable<int> _ArrangementsInPlaceId;
		
		private System.Nullable<int> _InAttachmentId;
		
		private System.Nullable<int> _ProcessStateId;
		
		private System.Nullable<int> _DBInfoId;
		
		private System.Nullable<int> _UncollectabilityCertificateId;
		
		private System.Nullable<decimal> _Provision;
		
		private System.Nullable<System.DateTime> _ProvisionReceptionDate;
		
		private System.Nullable<decimal> _PendingInvoicePayment;
		
		private string _DiligenceLocation;
		
		private System.Nullable<int> _JudicialPhaseId;
		
		private System.Nullable<System.DateTime> _PendingInvoicePaymentDate;
		
		private string _CreditorReference;
		
		private System.Nullable<System.DateTime> _AcceptDate;
		
		private System.Nullable<System.DateTime> _DuplicatesReceipt;
		
		private string _JudgeObservation;
		
		private int _Alert;
		
		private EntityRef<tb_Process> _tb_Process;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    partial void OnPaymentAgreementIdChanging(System.Nullable<int> value);
    partial void OnPaymentAgreementIdChanged();
    partial void OnProcessExtinctionIdChanging(System.Nullable<int> value);
    partial void OnProcessExtinctionIdChanged();
    partial void OnExtinctionCodeIdChanging(System.Nullable<int> value);
    partial void OnExtinctionCodeIdChanged();
    partial void OnArrangementsInPlaceIdChanging(System.Nullable<int> value);
    partial void OnArrangementsInPlaceIdChanged();
    partial void OnInAttachmentIdChanging(System.Nullable<int> value);
    partial void OnInAttachmentIdChanged();
    partial void OnProcessStateIdChanging(System.Nullable<int> value);
    partial void OnProcessStateIdChanged();
    partial void OnDBInfoIdChanging(System.Nullable<int> value);
    partial void OnDBInfoIdChanged();
    partial void OnUncollectabilityCertificateIdChanging(System.Nullable<int> value);
    partial void OnUncollectabilityCertificateIdChanged();
    partial void OnProvisionChanging(System.Nullable<decimal> value);
    partial void OnProvisionChanged();
    partial void OnProvisionReceptionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProvisionReceptionDateChanged();
    partial void OnPendingInvoicePaymentChanging(System.Nullable<decimal> value);
    partial void OnPendingInvoicePaymentChanged();
    partial void OnDiligenceLocationChanging(string value);
    partial void OnDiligenceLocationChanged();
    partial void OnJudicialPhaseIdChanging(System.Nullable<int> value);
    partial void OnJudicialPhaseIdChanged();
    partial void OnPendingInvoicePaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPendingInvoicePaymentDateChanged();
    partial void OnCreditorReferenceChanging(string value);
    partial void OnCreditorReferenceChanged();
    partial void OnAcceptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptDateChanged();
    partial void OnDuplicatesReceiptChanging(System.Nullable<System.DateTime> value);
    partial void OnDuplicatesReceiptChanged();
    partial void OnJudgeObservationChanging(string value);
    partial void OnJudgeObservationChanged();
    partial void OnAlertChanging(int value);
    partial void OnAlertChanged();
    #endregion
		
		public tb_ProcessDetail()
		{
			this._tb_Process = default(EntityRef<tb_Process>);
			OnCreated();
		}
		
		[Column(Storage="_ProcessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					if (this._tb_Process.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Column(Storage="_PaymentAgreementId", DbType="Int")]
		public System.Nullable<int> PaymentAgreementId
		{
			get
			{
				return this._PaymentAgreementId;
			}
			set
			{
				if ((this._PaymentAgreementId != value))
				{
					this.OnPaymentAgreementIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentAgreementId = value;
					this.SendPropertyChanged("PaymentAgreementId");
					this.OnPaymentAgreementIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessExtinctionId", DbType="Int")]
		public System.Nullable<int> ProcessExtinctionId
		{
			get
			{
				return this._ProcessExtinctionId;
			}
			set
			{
				if ((this._ProcessExtinctionId != value))
				{
					this.OnProcessExtinctionIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessExtinctionId = value;
					this.SendPropertyChanged("ProcessExtinctionId");
					this.OnProcessExtinctionIdChanged();
				}
			}
		}
		
		[Column(Storage="_ExtinctionCodeId", DbType="Int")]
		public System.Nullable<int> ExtinctionCodeId
		{
			get
			{
				return this._ExtinctionCodeId;
			}
			set
			{
				if ((this._ExtinctionCodeId != value))
				{
					this.OnExtinctionCodeIdChanging(value);
					this.SendPropertyChanging();
					this._ExtinctionCodeId = value;
					this.SendPropertyChanged("ExtinctionCodeId");
					this.OnExtinctionCodeIdChanged();
				}
			}
		}
		
		[Column(Storage="_ArrangementsInPlaceId", DbType="Int")]
		public System.Nullable<int> ArrangementsInPlaceId
		{
			get
			{
				return this._ArrangementsInPlaceId;
			}
			set
			{
				if ((this._ArrangementsInPlaceId != value))
				{
					this.OnArrangementsInPlaceIdChanging(value);
					this.SendPropertyChanging();
					this._ArrangementsInPlaceId = value;
					this.SendPropertyChanged("ArrangementsInPlaceId");
					this.OnArrangementsInPlaceIdChanged();
				}
			}
		}
		
		[Column(Storage="_InAttachmentId", DbType="Int")]
		public System.Nullable<int> InAttachmentId
		{
			get
			{
				return this._InAttachmentId;
			}
			set
			{
				if ((this._InAttachmentId != value))
				{
					this.OnInAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._InAttachmentId = value;
					this.SendPropertyChanged("InAttachmentId");
					this.OnInAttachmentIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessStateId", DbType="Int")]
		public System.Nullable<int> ProcessStateId
		{
			get
			{
				return this._ProcessStateId;
			}
			set
			{
				if ((this._ProcessStateId != value))
				{
					this.OnProcessStateIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessStateId = value;
					this.SendPropertyChanged("ProcessStateId");
					this.OnProcessStateIdChanged();
				}
			}
		}
		
		[Column(Storage="_DBInfoId", DbType="Int")]
		public System.Nullable<int> DBInfoId
		{
			get
			{
				return this._DBInfoId;
			}
			set
			{
				if ((this._DBInfoId != value))
				{
					this.OnDBInfoIdChanging(value);
					this.SendPropertyChanging();
					this._DBInfoId = value;
					this.SendPropertyChanged("DBInfoId");
					this.OnDBInfoIdChanged();
				}
			}
		}
		
		[Column(Storage="_UncollectabilityCertificateId", DbType="Int")]
		public System.Nullable<int> UncollectabilityCertificateId
		{
			get
			{
				return this._UncollectabilityCertificateId;
			}
			set
			{
				if ((this._UncollectabilityCertificateId != value))
				{
					this.OnUncollectabilityCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._UncollectabilityCertificateId = value;
					this.SendPropertyChanged("UncollectabilityCertificateId");
					this.OnUncollectabilityCertificateIdChanged();
				}
			}
		}
		
		[Column(Storage="_Provision", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Provision
		{
			get
			{
				return this._Provision;
			}
			set
			{
				if ((this._Provision != value))
				{
					this.OnProvisionChanging(value);
					this.SendPropertyChanging();
					this._Provision = value;
					this.SendPropertyChanged("Provision");
					this.OnProvisionChanged();
				}
			}
		}
		
		[Column(Storage="_ProvisionReceptionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProvisionReceptionDate
		{
			get
			{
				return this._ProvisionReceptionDate;
			}
			set
			{
				if ((this._ProvisionReceptionDate != value))
				{
					this.OnProvisionReceptionDateChanging(value);
					this.SendPropertyChanging();
					this._ProvisionReceptionDate = value;
					this.SendPropertyChanged("ProvisionReceptionDate");
					this.OnProvisionReceptionDateChanged();
				}
			}
		}
		
		[Column(Storage="_PendingInvoicePayment", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> PendingInvoicePayment
		{
			get
			{
				return this._PendingInvoicePayment;
			}
			set
			{
				if ((this._PendingInvoicePayment != value))
				{
					this.OnPendingInvoicePaymentChanging(value);
					this.SendPropertyChanging();
					this._PendingInvoicePayment = value;
					this.SendPropertyChanged("PendingInvoicePayment");
					this.OnPendingInvoicePaymentChanged();
				}
			}
		}
		
		[Column(Storage="_DiligenceLocation", DbType="NVarChar(100)")]
		public string DiligenceLocation
		{
			get
			{
				return this._DiligenceLocation;
			}
			set
			{
				if ((this._DiligenceLocation != value))
				{
					this.OnDiligenceLocationChanging(value);
					this.SendPropertyChanging();
					this._DiligenceLocation = value;
					this.SendPropertyChanged("DiligenceLocation");
					this.OnDiligenceLocationChanged();
				}
			}
		}
		
		[Column(Storage="_JudicialPhaseId", DbType="Int")]
		public System.Nullable<int> JudicialPhaseId
		{
			get
			{
				return this._JudicialPhaseId;
			}
			set
			{
				if ((this._JudicialPhaseId != value))
				{
					this.OnJudicialPhaseIdChanging(value);
					this.SendPropertyChanging();
					this._JudicialPhaseId = value;
					this.SendPropertyChanged("JudicialPhaseId");
					this.OnJudicialPhaseIdChanged();
				}
			}
		}
		
		[Column(Storage="_PendingInvoicePaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PendingInvoicePaymentDate
		{
			get
			{
				return this._PendingInvoicePaymentDate;
			}
			set
			{
				if ((this._PendingInvoicePaymentDate != value))
				{
					this.OnPendingInvoicePaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PendingInvoicePaymentDate = value;
					this.SendPropertyChanged("PendingInvoicePaymentDate");
					this.OnPendingInvoicePaymentDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreditorReference", DbType="NVarChar(50)")]
		public string CreditorReference
		{
			get
			{
				return this._CreditorReference;
			}
			set
			{
				if ((this._CreditorReference != value))
				{
					this.OnCreditorReferenceChanging(value);
					this.SendPropertyChanging();
					this._CreditorReference = value;
					this.SendPropertyChanged("CreditorReference");
					this.OnCreditorReferenceChanged();
				}
			}
		}
		
		[Column(Storage="_AcceptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[Column(Storage="_DuplicatesReceipt", DbType="DateTime")]
		public System.Nullable<System.DateTime> DuplicatesReceipt
		{
			get
			{
				return this._DuplicatesReceipt;
			}
			set
			{
				if ((this._DuplicatesReceipt != value))
				{
					this.OnDuplicatesReceiptChanging(value);
					this.SendPropertyChanging();
					this._DuplicatesReceipt = value;
					this.SendPropertyChanged("DuplicatesReceipt");
					this.OnDuplicatesReceiptChanged();
				}
			}
		}
		
		[Column(Storage="_JudgeObservation", DbType="NVarChar(4000)")]
		public string JudgeObservation
		{
			get
			{
				return this._JudgeObservation;
			}
			set
			{
				if ((this._JudgeObservation != value))
				{
					this.OnJudgeObservationChanging(value);
					this.SendPropertyChanging();
					this._JudgeObservation = value;
					this.SendPropertyChanged("JudgeObservation");
					this.OnJudgeObservationChanged();
				}
			}
		}
		
		[Column(Storage="_Alert", DbType="Int NOT NULL")]
		public int Alert
		{
			get
			{
				return this._Alert;
			}
			set
			{
				if ((this._Alert != value))
				{
					this.OnAlertChanging(value);
					this.SendPropertyChanging();
					this._Alert = value;
					this.SendPropertyChanged("Alert");
					this.OnAlertChanged();
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessDetail", Storage="_tb_Process", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
		public tb_Process tb_Process
		{
			get
			{
				return this._tb_Process.Entity;
			}
			set
			{
				tb_Process previousValue = this._tb_Process.Entity;
				if (((previousValue != value) 
							|| (this._tb_Process.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Process.Entity = null;
						previousValue.tb_ProcessDetail = null;
					}
					this._tb_Process.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessDetail = this;
						this._ProcessId = value.ProcessId;
					}
					else
					{
						this._ProcessId = default(int);
					}
					this.SendPropertyChanged("tb_Process");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_ProcessExecuted")]
	public partial class tb_ProcessExecuted : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExecutedId;
		
		private int _ProcessId;
		
		private EntityRef<tb_Process> _tb_Process;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExecutedIdChanging(int value);
    partial void OnExecutedIdChanged();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    #endregion
		
		public tb_ProcessExecuted()
		{
			this._tb_Process = default(EntityRef<tb_Process>);
			OnCreated();
		}
		
		[Column(Storage="_ExecutedId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExecutedId
		{
			get
			{
				return this._ExecutedId;
			}
			set
			{
				if ((this._ExecutedId != value))
				{
					this.OnExecutedIdChanging(value);
					this.SendPropertyChanging();
					this._ExecutedId = value;
					this.SendPropertyChanged("ExecutedId");
					this.OnExecutedIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					if (this._tb_Process.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessExecuted", Storage="_tb_Process", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
		public tb_Process tb_Process
		{
			get
			{
				return this._tb_Process.Entity;
			}
			set
			{
				tb_Process previousValue = this._tb_Process.Entity;
				if (((previousValue != value) 
							|| (this._tb_Process.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Process.Entity = null;
						previousValue.tb_ProcessExecuteds.Remove(this);
					}
					this._tb_Process.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessExecuteds.Add(this);
						this._ProcessId = value.ProcessId;
					}
					else
					{
						this._ProcessId = default(int);
					}
					this.SendPropertyChanged("tb_Process");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_ProcessCreditor")]
	public partial class tb_ProcessCreditor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditorId;
		
		private int _ProcessId;
		
		private EntityRef<tb_Process> _tb_Process;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditorIdChanging(int value);
    partial void OnCreditorIdChanged();
    partial void OnProcessIdChanging(int value);
    partial void OnProcessIdChanged();
    #endregion
		
		public tb_ProcessCreditor()
		{
			this._tb_Process = default(EntityRef<tb_Process>);
			OnCreated();
		}
		
		[Column(Storage="_CreditorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CreditorId
		{
			get
			{
				return this._CreditorId;
			}
			set
			{
				if ((this._CreditorId != value))
				{
					this.OnCreditorIdChanging(value);
					this.SendPropertyChanging();
					this._CreditorId = value;
					this.SendPropertyChanged("CreditorId");
					this.OnCreditorIdChanged();
				}
			}
		}
		
		[Column(Storage="_ProcessId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProcessId
		{
			get
			{
				return this._ProcessId;
			}
			set
			{
				if ((this._ProcessId != value))
				{
					if (this._tb_Process.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessId = value;
					this.SendPropertyChanged("ProcessId");
					this.OnProcessIdChanged();
				}
			}
		}
		
		[Association(Name="tb_Process_tb_ProcessCreditor", Storage="_tb_Process", ThisKey="ProcessId", OtherKey="ProcessId", IsForeignKey=true)]
		public tb_Process tb_Process
		{
			get
			{
				return this._tb_Process.Entity;
			}
			set
			{
				tb_Process previousValue = this._tb_Process.Entity;
				if (((previousValue != value) 
							|| (this._tb_Process.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Process.Entity = null;
						previousValue.tb_ProcessCreditors.Remove(this);
					}
					this._tb_Process.Entity = value;
					if ((value != null))
					{
						value.tb_ProcessCreditors.Add(this);
						this._ProcessId = value.ProcessId;
					}
					else
					{
						this._ProcessId = default(int);
					}
					this.SendPropertyChanged("tb_Process");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tb_Entity")]
	public partial class tb_Entity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntityId;
		
		private string _Name;
		
		private string _TaxNumber;
		
		private string _HPhone;
		
		private string _Fax;
		
		private string _MPhone;
		
		private string _Email;
		
		private string _Observation;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _IdentityCard;
		
		private System.Nullable<System.DateTime> _IdentityCardExpireDate;
		
		private string _BirthPlace;
		
		private string _CleanName;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.Guid> _CreateUserId;
		
		private System.Nullable<System.DateTime> _AlterDate;
		
		private System.Nullable<System.Guid> _AlterUserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntityIdChanging(int value);
    partial void OnEntityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnHPhoneChanging(string value);
    partial void OnHPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMPhoneChanging(string value);
    partial void OnMPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnObservationChanging(string value);
    partial void OnObservationChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnIdentityCardChanging(string value);
    partial void OnIdentityCardChanged();
    partial void OnIdentityCardExpireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIdentityCardExpireDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnCleanNameChanging(string value);
    partial void OnCleanNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnCreateUserIdChanged();
    partial void OnAlterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlterDateChanged();
    partial void OnAlterUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnAlterUserIdChanged();
    #endregion
		
		public tb_Entity()
		{
			OnCreated();
		}
		
		[Column(Storage="_EntityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_TaxNumber", DbType="NVarChar(15)")]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[Column(Storage="_HPhone", DbType="NVarChar(15)")]
		public string HPhone
		{
			get
			{
				return this._HPhone;
			}
			set
			{
				if ((this._HPhone != value))
				{
					this.OnHPhoneChanging(value);
					this.SendPropertyChanging();
					this._HPhone = value;
					this.SendPropertyChanged("HPhone");
					this.OnHPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Fax", DbType="NVarChar(15)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[Column(Storage="_MPhone", DbType="NVarChar(15)")]
		public string MPhone
		{
			get
			{
				return this._MPhone;
			}
			set
			{
				if ((this._MPhone != value))
				{
					this.OnMPhoneChanging(value);
					this.SendPropertyChanging();
					this._MPhone = value;
					this.SendPropertyChanged("MPhone");
					this.OnMPhoneChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Observation", DbType="NVarChar(4000)")]
		public string Observation
		{
			get
			{
				return this._Observation;
			}
			set
			{
				if ((this._Observation != value))
				{
					this.OnObservationChanging(value);
					this.SendPropertyChanging();
					this._Observation = value;
					this.SendPropertyChanged("Observation");
					this.OnObservationChanged();
				}
			}
		}
		
		[Column(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[Column(Storage="_IdentityCard", DbType="NVarChar(10)")]
		public string IdentityCard
		{
			get
			{
				return this._IdentityCard;
			}
			set
			{
				if ((this._IdentityCard != value))
				{
					this.OnIdentityCardChanging(value);
					this.SendPropertyChanging();
					this._IdentityCard = value;
					this.SendPropertyChanged("IdentityCard");
					this.OnIdentityCardChanged();
				}
			}
		}
		
		[Column(Storage="_IdentityCardExpireDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IdentityCardExpireDate
		{
			get
			{
				return this._IdentityCardExpireDate;
			}
			set
			{
				if ((this._IdentityCardExpireDate != value))
				{
					this.OnIdentityCardExpireDateChanging(value);
					this.SendPropertyChanging();
					this._IdentityCardExpireDate = value;
					this.SendPropertyChanged("IdentityCardExpireDate");
					this.OnIdentityCardExpireDateChanged();
				}
			}
		}
		
		[Column(Storage="_BirthPlace", DbType="NVarChar(100)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[Column(Storage="_CleanName", DbType="NVarChar(200)")]
		public string CleanName
		{
			get
			{
				return this._CleanName;
			}
			set
			{
				if ((this._CleanName != value))
				{
					this.OnCleanNameChanging(value);
					this.SendPropertyChanging();
					this._CleanName = value;
					this.SendPropertyChanged("CleanName");
					this.OnCleanNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_AlterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AlterDate
		{
			get
			{
				return this._AlterDate;
			}
			set
			{
				if ((this._AlterDate != value))
				{
					this.OnAlterDateChanging(value);
					this.SendPropertyChanging();
					this._AlterDate = value;
					this.SendPropertyChanged("AlterDate");
					this.OnAlterDateChanged();
				}
			}
		}
		
		[Column(Storage="_AlterUserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlterUserId
		{
			get
			{
				return this._AlterUserId;
			}
			set
			{
				if ((this._AlterUserId != value))
				{
					this.OnAlterUserIdChanging(value);
					this.SendPropertyChanging();
					this._AlterUserId = value;
					this.SendPropertyChanged("AlterUserId");
					this.OnAlterUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
